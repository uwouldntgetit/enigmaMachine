Goals of the program:
- encrypt a message
- decrypt the encrypted message
- make the components buildable, not dependents upon each other to do some task
- I can create different versions of the enigma with the same components

components:
- rotors
- reflector (static)
- ringstellung (optional)

how it works:
- The user chooses the modes: encrypt message or decrypt message
- for every mode the user is asked which rotors to use and in which position
- the input is taken and passed to a code construct that simulates the engima machine with its specifics
how to encrypt:
- the letter passes to the first rotor, it is changed and then passed to the next rotor
- this continue until the last rotor, where the letter is passed to a reflector that scrambles it and passes it back
  to the last rotor.
- after each letter is completely encrypted the rotor rotates


rotors:
- the array that contains the rotor combination doesn't have to be a char one but it is actually better if it's an int one
  containing numbers from 1 to 26 representing the alphabet. It's better since I can directly index the array of the next rotor
  without having to convert the letter to number.
  
problems:
- how to keep count of the rotor's movements